{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Signup.js","actions/api.js","actions/postMessage.js","components/useForm.js","components/PostMessageForm.js","components/PostMessages.js","reducers/postMessage.js","reducers/index.js","actions/store.js","components/Data.js","components/Dashboard.js","components/Login.js","components/PrivateRoute.js","components/ForgotPassword.js","components/UpdateProfile.js","components/App.js","serviceWorker.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","a","preventDefault","current","push","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","to","baseUrl","url","fetchAll","axios","get","fetchById","create","newRecord","post","update","updatedRecord","put","delete","ACTION_TYPES","useForm","initialFieldValues","setCurrentId","values","setValues","errors","setErrors","handleInputChange","target","name","resetForm","title","message","mapActionToProps","createPostMessage","data","onSuccess","dispatch","api","then","res","payload","catch","err","console","log","updatePostMessage","connect","state","postMessageList","postMessage","list","withStyles","theme","root","margin","spacing","form","display","flexWrap","justifyContent","postBtn","width","classes","props","currentId","find","x","_id","autoComplete","noValidate","ButterToast","raise","content","Crisp","scheme","Cinnamon","SCHEME_PURPLE","icon","AssignmentTurnedIn","temp","Object","every","validate","TextField","label","fullWidth","onChange","helperText","multiline","rows","color","size","fetchAllPostMessages","deletePostMessage","paper","padding","smMargin","actionDiv","textAlign","Grid","container","item","xs","Paper","List","map","record","index","key","ListItem","ListItemText","Typography","onClick","window","confirm","DeleteSweep","Divider","component","initialState","reducers","combineReducers","action","filter","store","createStore","compose","applyMiddleware","thunk","Data","maxWidth","AppBar","position","align","vertical","POS_TOP","horizontal","POS_RIGHT","Dashboard","Login","PrivateRoute","Component","rest","render","ForgotPassword","setMessage","UpdateProfile","promises","Promise","all","finally","defaultValue","placeholder","App","Container","style","minHeight","exact","path","s","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3b6a0824.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey:  \"AIzaSyDEy2xKyGAC0EwgriuaT_Bm3q0Gh9jvQDQ\",\r\n  authDomain: \"challenge-development.firebaseapp.com\",\r\n  databaseURL: \"https://challenge-development.firebaseio.com\",\r\n  projectId: \"challenge-development\",\r\n  storageBucket:\"challenge-development.appspot.com\",\r\n  messagingSenderId: \"1082045758469\",\r\n  appId: \"1:1082045758469:web:5f1a963aeb4061cb12306c\"\r\n})\r\n\r\nexport const auth = app.auth()\r\nexport default app\r\n","import React, { useContext, useState, useEffect } from \"react\"\r\nimport { auth } from \"../firebase\"\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut()\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email)\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n","import React, { useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\n\r\nexport default function Signup() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { signup } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await signup(emailRef.current.value, passwordRef.current.value)\r\n      history.push(\"/\")\r\n    } catch {\r\n      setError(\"Failed to create an account\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"password-confirm\">\r\n              <Form.Label>Password Confirmation</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        Already have an account? <Link to=\"/login\">Log In</Link>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = 'http://localhost:4000/'\r\n\r\nexport default {\r\n    postMessage(url = baseUrl + 'postmessages/') {\r\n        return {\r\n            fetchAll: () => axios.get(url),\r\n            fetchById: id => axios.get(url + id),\r\n            create: newRecord => axios.post(url, newRecord),\r\n            update: (id, updatedRecord) => axios.put(url + id, updatedRecord),\r\n            delete: id => axios.delete(url + id)\r\n        }\r\n    }\r\n}","import api from \"./api.js\";\r\n\r\nexport const ACTION_TYPES = {\r\n    CREATE: 'CREATE',\r\n    UPDATE: 'UPDATE',\r\n    DELETE: 'DELETE',\r\n    FETCH_ALL: 'FETCH_ALL'\r\n}\r\n\r\nexport const fetchAll = () => dispatch => {\r\n    api.postMessage().fetchAll()\r\n        .then(res => {\r\n            dispatch({\r\n                type: ACTION_TYPES.FETCH_ALL,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n\r\n}\r\n\r\nexport const create = (data, onSuccess) => dispatch => {\r\n    api.postMessage().create(data)\r\n        .then(res =>{\r\n            dispatch({\r\n                type: ACTION_TYPES.CREATE,\r\n                payload: res.data\r\n            })\r\n            onSuccess()\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport const update = (id,data, onSuccess) => dispatch => {\r\n    api.postMessage().update(id,data)\r\n        .then(res =>{\r\n            dispatch({\r\n                type: ACTION_TYPES.UPDATE,\r\n                payload: res.data\r\n            })\r\n            onSuccess()\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const Delete = (id, onSuccess) => dispatch => {\r\n    api.postMessage().delete(id)\r\n        .then(res =>{\r\n            dispatch({\r\n                type: ACTION_TYPES.DELETE,\r\n                payload: id\r\n            })\r\n            onSuccess()\r\n        })\r\n        .catch(err => console.log(err))\r\n}","import React, { useEffect, useState } from \"react\";\r\n\r\nconst useForm = (initialFieldValues,setCurrentId) => {\r\n\r\n    const [values, setValues] = useState(initialFieldValues)\r\n    const [errors, setErrors] = useState({})\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const resetForm =() =>{\r\n        setValues(initialFieldValues)\r\n        setErrors({})\r\n        setCurrentId(0)\r\n    }\r\n\r\n    return {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    };\r\n}\r\n\r\nexport default useForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { TextField, withStyles, Button } from \"@material-ui/core\";\r\nimport useForm from \"./useForm\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/postMessage\";\r\nimport ButterToast, { Cinnamon } from \"butter-toast\";\r\nimport { AssignmentTurnedIn } from \"@material-ui/icons\";\r\n\r\nconst initialFieldValues = {\r\n    title: '',\r\n    message: ''\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1)\r\n        },\r\n    },\r\n    form: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center'\r\n    },\r\n    postBtn: {\r\n        width: \"50%\"\r\n    }\r\n})\r\n\r\nconst PostMessageForm = ({ classes, ...props }) => {\r\n\r\n    useEffect(() => {\r\n        if (props.currentId != 0){\r\n            setValues({\r\n                ...props.postMessageList.find(x => x._id == props.currentId)\r\n            })\r\n            setErrors({})\r\n        }\r\n    }, [props.currentId])\r\n\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.title = values.title ? \"\" : \"This field is required.\"\r\n        temp.message = values.message ? \"\" : \"This field is required.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    var {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFieldValues,props.setCurrentId)\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        const onSuccess = () => {\r\n            ButterToast.raise({\r\n                content: <Cinnamon.Crisp title=\"Post Box\"\r\n                    content=\"Submitted successfully\"\r\n                    scheme={Cinnamon.Crisp.SCHEME_PURPLE}\r\n                    icon={<AssignmentTurnedIn />}\r\n                />\r\n            })\r\n            resetForm()\r\n        }\r\n        if (validate()) {\r\n            if (props.currentId == 0)\r\n                props.createPostMessage(values, onSuccess)\r\n            else\r\n                props.updatePostMessage(props.currentId, values, onSuccess)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`}\r\n            onSubmit={handleSubmit}>\r\n            <TextField\r\n                name=\"title\"\r\n                variant=\"outlined\"\r\n                label=\"Title\"\r\n                fullWidth\r\n                value={values.title}\r\n                onChange={handleInputChange}\r\n                {...(errors.title && { error: true, helperText: errors.title })}\r\n            />\r\n            <TextField\r\n                name=\"message\"\r\n                variant=\"outlined\"\r\n                label=\"Message\"\r\n                fullWidth\r\n                multiline\r\n                rows={4}\r\n                value={values.message}\r\n                onChange={handleInputChange}\r\n                {...(errors.message && { error: true, helperText: errors.message })}\r\n            />\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                type=\"submit\"\r\n                className={classes.postBtn}\r\n            >Submit</Button>\r\n        </form>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    postMessageList: state.postMessage.list\r\n})\r\n\r\nconst mapActionToProps = {\r\n    createPostMessage: actions.create,\r\n    updatePostMessage: actions.update\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(PostMessageForm));","import React, { useEffect, useState, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/postMessage\";\r\nimport { Grid, Paper, withStyles, List, ListItem, ListItemText, Typography, Divider, Button } from \"@material-ui/core\";\r\nimport PostMessageForm from \"./PostMessageForm\";\r\nimport ButterToast, { Cinnamon } from \"butter-toast\";\r\nimport { DeleteSweep } from \"@material-ui/icons\";\r\n\r\nconst styles = theme => ({\r\n    paper: {\r\n        margin: theme.spacing(3),\r\n        padding: theme.spacing(2)\r\n    },\r\n    smMargin: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    actionDiv: {\r\n        textAlign: \"center\"\r\n    }\r\n})\r\n\r\nconst PostMessages = ({ classes, ...props }) => {\r\n    //const {classes, ...props} = props\r\n    const [currentId, setCurrentId] = useState(0)\r\n\r\n    useEffect(() => {\r\n        props.fetchAllPostMessages()\r\n    }, [])//DidMount\r\n\r\n    const onDelete = id => {\r\n        const onSuccess = () => {\r\n            ButterToast.raise({\r\n                content: <Cinnamon.Crisp title=\"Post Box\"\r\n                    content=\"Deleted successfully\"\r\n                    scheme={Cinnamon.Crisp.SCHEME_PURPLE}\r\n                    icon={<DeleteSweep />}\r\n                />\r\n            })\r\n        }\r\n        if (window.confirm('Are you sure to delete this record?'))\r\n            props.deletePostMessage(id,onSuccess)\r\n    }\r\n\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={5}>\r\n                <Paper className={classes.paper}>\r\n                    <PostMessageForm {...{ currentId, setCurrentId }} />\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={7}>\r\n                <Paper className={classes.paper}>\r\n                    <List>\r\n                        {\r\n                            props.postMessageList.map((record, index) => {\r\n                                return (\r\n                                    <Fragment key={index}>\r\n                                        <ListItem>\r\n                                            <ListItemText>\r\n                                                <Typography variant=\"h5\">\r\n                                                    {record.title}\r\n                                                </Typography>\r\n                                                <div>\r\n                                                    {record.message}\r\n                                                </div>\r\n                                                <div className={classes.actionDiv}>\r\n                                                    <Button variant=\"contained\" color=\"primary\" size=\"small\"\r\n                                                        className={classes.smMargin}\r\n                                                        onClick={() => setCurrentId(record._id)}>\r\n                                                        Edit\r\n                                                    </Button>\r\n                                                    <Button variant=\"contained\" color=\"secondary\" size=\"small\"\r\n                                                        className={classes.smMargin}\r\n                                                        onClick={() => onDelete(record._id)}>\r\n                                                        Delete\r\n                                                    </Button>\r\n                                                </div>\r\n                                            </ListItemText>\r\n                                        </ListItem>\r\n                                        <Divider component=\"li\" />\r\n                                    </Fragment>\r\n                                )\r\n                            })\r\n                        }\r\n                    </List>\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    postMessageList: state.postMessage.list\r\n})\r\n\r\nconst mapActionToProps = {\r\n    fetchAllPostMessages: actions.fetchAll,\r\n    deletePostMessage: actions.Delete\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(PostMessages));\r\n","import { ACTION_TYPES } from \"../actions/postMessage\";\r\n\r\nconst initialState = {\r\n    list: []\r\n}\r\n//postMessage.list\r\nexport const postMessage = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.FETCH_ALL:\r\n            return {\r\n                ...state,\r\n                list: [...action.payload]\r\n            }\r\n        case ACTION_TYPES.CREATE:\r\n            return {\r\n                ...state,\r\n                list: [...state.list, action.payload]\r\n            }\r\n        case ACTION_TYPES.UPDATE:\r\n            return {\r\n                ...state,\r\n                list: state.list.map(x => x._id == action.payload._id ? action.payload : x)\r\n            }\r\n\r\n        case ACTION_TYPES.DELETE:\r\n            return {\r\n                ...state,\r\n                list:state.list.filter(x => x._id != action.payload)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { postMessage } from \"./postMessage\";\r\n\r\nexport const reducers = combineReducers({\r\n    postMessage\r\n})","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reducers } from \"../reducers\";\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    compose(\r\n        applyMiddleware(thunk),\r\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n)","import React from 'react';\r\nimport '../App.css';\r\nimport { Provider } from \"react-redux\";\r\nimport PostMessages from \"./PostMessages\";\r\nimport { store } from \"../actions/store\";\r\nimport { Container, AppBar, Typography } from \"@material-ui/core\";\r\nimport ButterToast,{ POS_RIGHT,POS_TOP } from \"butter-toast\";\r\n\r\nfunction Data() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Container maxWidth=\"lg\">\r\n        <AppBar position=\"static\" color=\"inherit\">\r\n          <Typography\r\n            variant=\"h2\"\r\n            align=\"center\">\r\n               Message Box\r\n          </Typography>\r\n        </AppBar>\r\n        <PostMessages />\r\n        <ButterToast position={{vertical:POS_TOP,horizontal:POS_RIGHT}}/>\r\n      </Container>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default Data;\r\n","import React, { useState } from \"react\"\r\nimport { Card, Button, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport Data from \"./Data\"\r\n\r\nexport default function Dashboard() {\r\n  const [error, setError] = useState(\"\")\r\n  const { currentUser, logout } = useAuth()\r\n  const history = useHistory()\r\n\r\n  async function handleLogout() {\r\n    setError(\"\")\r\n\r\n    try {\r\n      await logout()\r\n      history.push(\"/login\")\r\n    } catch {\r\n      setError(\"Failed to log out\")\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n       <Data/>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Profile</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <strong>Email:</strong> {currentUser.email}\r\n          <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">\r\n            Update Profile\r\n          </Link>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        <Button variant=\"link\" onClick={handleLogout}>\r\n       \r\n          Log Out\r\n        </Button>\r\n     \r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\n\r\nexport default function Login() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const { login } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await login(emailRef.current.value, passwordRef.current.value)\r\n      history.push(\"/\")\r\n    } catch {\r\n      setError(\"Failed to log in\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Log In</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordRef} required />\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n              Log In\r\n            </Button>\r\n          </Form>\r\n          <div className=\"w-100 text-center mt-3\">\r\n            <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth()\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }}\r\n    ></Route>\r\n  )\r\n}\r\n","import React, { useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport default function ForgotPassword() {\r\n  const emailRef = useRef()\r\n  const { resetPassword } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [message, setMessage] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setMessage(\"\")\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await resetPassword(emailRef.current.value)\r\n      setMessage(\"Check your inbox for further instructions\")\r\n    } catch {\r\n      setError(\"Failed to reset password\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Password Reset</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          {message && <Alert variant=\"success\">{message}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required />\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n              Reset Password\r\n            </Button>\r\n          </Form>\r\n          <div className=\"w-100 text-center mt-3\">\r\n            <Link to=\"/login\">Login</Link>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\n\r\nexport default function UpdateProfile() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { currentUser, updatePassword, updateEmail } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n\r\n    const promises = []\r\n    setLoading(true)\r\n    setError(\"\")\r\n\r\n    if (emailRef.current.value !== currentUser.email) {\r\n      promises.push(updateEmail(emailRef.current.value))\r\n    }\r\n    if (passwordRef.current.value) {\r\n      promises.push(updatePassword(passwordRef.current.value))\r\n    }\r\n\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        history.push(\"/\")\r\n      })\r\n      .catch(() => {\r\n        setError(\"Failed to update account\")\r\n      })\r\n      .finally(() => {\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Update Profile</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                ref={emailRef}\r\n                required\r\n                defaultValue={currentUser.email}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                ref={passwordRef}\r\n                placeholder=\"Leave blank to keep the same\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id=\"password-confirm\">\r\n              <Form.Label>Password Confirmation</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                ref={passwordConfirmRef}\r\n                placeholder=\"Leave blank to keep the same\"\r\n              />\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        <Link to=\"/\">Cancel</Link>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport Signup from \"./Signup\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport { AuthProvider } from \"../contexts/AuthContext\"\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\r\nimport Dashboard from \"./Dashboard\"\r\nimport Login from \"./Login\"\r\nimport PrivateRoute from \"./PrivateRoute\"\r\nimport ForgotPassword from \"./ForgotPassword\"\r\nimport UpdateProfile from \"./UpdateProfile\"\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Container\r\n      className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"100vh\" }}\r\n    >\r\n      <div   >\r\n        <Router>\r\n          <AuthProvider>\r\n            <Switch>\r\n              <PrivateRoute exact path=\"/\" component={Dashboard} />\r\n\r\n              <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\r\n              <Route  path=\"/signup\" component={Signup} />\r\n              {/* <Route path=\"/quiz\" component={Quiz}/> */}\r\n              <Route s path=\"/login\" component={Login} />\r\n              <Route  path=\"/forgot-password\" component={ForgotPassword} />\r\n            </Switch>\r\n          </AuthProvider>\r\n        </Router>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}